---
kind: pipeline
type: docker
name: amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: docker:27.5
  commands:
  - apk add make git bash file
  - git config --global --add safe.directory /drone/src
  - make
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
  volumes:
  - name: docker
    path: /var/run/docker.sock

# We need both docker and go, so we use golang image
# And add docker to the image
- name: e2e test
  image: golang:1.23.4-alpine3.21
  commands:
  - apk add make git bash file docker
  - docker image list
  - ./scripts/e2e
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    checksum_file: CHECKSUMsum-amd64.txt
    checksum_flatten: true
    files:
    - dist/artifacts/*
    prerelease: true
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

- name: docker-publish
  image: plugins/docker
  settings:
    dockerfile: package/Dockerfile
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: rancher/helm-controller
    tag: "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: docker:27.5
  commands:
  - apk add make git bash file
  - git config --global --add safe.directory /drone/src
  - make
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    checksum_file: CHECKSUMsum-arm64.txt
    checksum_flatten: true
    files:
    - dist/artifacts/*
    prerelease: true
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

- name: docker-publish
  image: plugins/docker
  settings:
    dockerfile: package/Dockerfile
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: rancher/helm-controller
    tag: "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: arm

platform:
  os: linux
  arch: arm

steps:
- name: build
  image: docker:27.5
  commands:
  - apk add make git bash file
  - git config --global --add safe.directory /drone/src
  - make
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: github_binary_release
  # latest tag is no longer available for ARM 32-bit
  image: plugins/github-release:linux-arm
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    checksum_file: CHECKSUMsum-arm.txt
    checksum_flatten: true
    files:
    - dist/artifacts/*
    prerelease: true
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

- name: docker-publish
  # latest tag is no longer available for ARM 32-bit
  image: plugins/docker:linux-arm
  settings:
    dockerfile: package/Dockerfile
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: rancher/helm-controller
    tag: "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: manifest

platform:
  os: linux
  arch: amd64

steps:
- name: manifest
  image: plugins/manifest:1.0.2
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    platforms:
    - linux/amd64
    - linux/arm64
    - linux/arm
    target: "rancher/helm-controller:${DRONE_TAG}"
    template: "rancher/helm-controller:${DRONE_TAG}-ARCH"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

depends_on:
- amd64
- arm64
- arm

...
